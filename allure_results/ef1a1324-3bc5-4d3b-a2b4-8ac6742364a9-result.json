{"name": "Раздел \"Вопросы о важном\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for firefox using Selenium Manager.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location", "trace": "service = <selenium.webdriver.firefox.service.Service object at 0x00000167E91C84F0>\noptions = <selenium.webdriver.firefox.options.Options object at 0x00000167E91CA2C0>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = service.path\n        try:\n>           path = SeleniumManager().driver_location(options) if path is None else path\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:90: in driver_location\n    output = self.run(args)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = ['C:\\\\Users\\\\ПК\\\\Sprint_4\\\\venv\\\\lib\\\\site-packages\\\\selenium\\\\webdriver\\\\common\\\\windows\\\\selenium-manager.exe', '--browser', 'firefox', '--output', 'json']\n\n    @staticmethod\n    def run(args: List[str]) -> dict:\n        \"\"\"\n        Executes the Selenium Manager Binary.\n        :Args:\n         - args: the components of the command being executed.\n        :Returns: The log string containing the driver location.\n        \"\"\"\n        if logger.getEffectiveLevel() == logging.DEBUG:\n            args.append(\"--debug\")\n        args.append(\"--output\")\n        args.append(\"json\")\n    \n        command = \" \".join(args)\n        logger.debug(f\"Executing process: {command}\")\n        try:\n            if sys.platform == \"win32\":\n                completed_proc = subprocess.run(\n                    args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, creationflags=subprocess.CREATE_NO_WINDOW\n                )\n            else:\n                completed_proc = subprocess.run(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n            stdout = completed_proc.stdout.decode(\"utf-8\").rstrip(\"\\n\")\n            stderr = completed_proc.stderr.decode(\"utf-8\").rstrip(\"\\n\")\n            output = json.loads(stdout)\n            result = output[\"result\"]\n        except Exception as err:\n            raise WebDriverException(f\"Unsuccessful command executed: {command}\") from err\n    \n        for item in output[\"logs\"]:\n            if item[\"level\"] == \"WARN\":\n                logger.warning(item[\"message\"])\n            if item[\"level\"] == \"DEBUG\" or item[\"level\"] == \"INFO\":\n                logger.debug(item[\"message\"])\n    \n        if completed_proc.returncode:\n>           raise WebDriverException(f\"Unsuccessful command executed: {command}.\\n{result}{stderr}\")\nE           selenium.common.exceptions.WebDriverException: Message: Unsuccessful command executed: C:\\Users\\ПК\\Sprint_4\\venv\\lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser firefox --output json.\nE           {'code': 69, 'message': 'Driver unavailable: Driver path: ', 'driver_path': '', 'browser_path': ''}\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:138: WebDriverException\n\nThe above exception was the direct cause of the following exception:\n\n    @pytest.fixture()\n    def driver():\n>       driver = webdriver.Firefox()\n\ntest\\conftest.py:6: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver.py:59: in __init__\n    self.service.path = DriverFinder.get_path(self.service, options)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nservice = <selenium.webdriver.firefox.service.Service object at 0x00000167E91C84F0>\noptions = <selenium.webdriver.firefox.options.Options object at 0x00000167E91CA2C0>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = service.path\n        try:\n            path = SeleniumManager().driver_location(options) if path is None else path\n        except Exception as err:\n            msg = f\"Unable to obtain driver for {options.capabilities['browserName']} using Selenium Manager.\"\n>           raise NoSuchDriverException(msg) from err\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for firefox using Selenium Manager.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:41: NoSuchDriverException"}, "parameters": [{"name": "index", "value": "2"}, {"name": "text", "value": "'Пока что у нас так: один заказ — один самокат. Если хотите покататься с друзьями, можете просто сделать несколько заказов — один за другим.'"}], "start": 1693790406232, "stop": 1693790406232, "uuid": "e03c0f7c-9539-4c17-9941-3ff72152bf5a", "historyId": "a1e52bb19fbd6fe52afb10f8650f5cf3", "testCaseId": "72a47cb6660c4d2892a7f411db0db071", "fullName": "test.test_questions.TestQuestions#test_get_answer_on_question_FAQ_passed", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_questions"}, {"name": "subSuite", "value": "TestQuestions"}, {"name": "host", "value": "DESKTOP-FF0AUS8"}, {"name": "thread", "value": "15008-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_questions"}]}